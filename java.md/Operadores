**OPERADORES DE ASIGNACION**
Mediante este operador se asigna un valor a una variable. Es el simbolo =
Ej:
`int numero = 3;`
`String cadena = "Hola Mundo"`
`double decimal = 4.5;`
`boolean verdad = true;`
**OPERADORES ARITMETICOS**
Son los que nos permiten realizar operaciones matemáticas: suma, resta, multiplicación, división y resto.
Son:
Operador Descripción

- Operador de Suma. Concatena cadenas para la suma de String

* Operador de Resta

- Operador de Multiplicación
  / Operador de División
  % Operador de Resto
  Se utilizan entre dos literales o variables y el resultado normamente lo asignaremos a una variable o bien lo evaluamos
  `variable = (valor1|variable1) operador (valor2|variable2);`
  **OPERADORES UNARIOS**
  Son aquellos que solo requieren un operando para funcionar.
  Son:
  Operador Descripción

* Operador unario suma. Indica un número positivo.

- Operador unario resta. Niega una expresión.
  ++ Operador de incremento. Incrementa el valor en 1.
  – Operador de decremento. Decrementa el valor en 1.
  ! Operador de complemento lógico. Invierte el valor de un booleano
  Hay varios tipos:
  -Operadores unarios suma o resta
  `int valor = 2;`
  `System.out.println(-valor);`
  -Operadores de incremento y decremento, se pueden aplicar como prefijo o como sufijo
  `++ variable;`
  `variable ++;`
  `-- variable;`
  `variable --;`
  -Operador de complemento lógico que sirve para negar un valor lógico. Se suele utilizar delante de una operación de evaluación booleana, y normalmente en sentencias de decisión o bucles.
  `! (expresion)`
  **OPERADORES IGUALDAD Y RELACIONALES**
  Son aquellos que nos permiten comparar el contenido de una variable contra otra.
  Operador Descripción
  == igual a
  != no igual a

  >     mayor que
  >
  > = mayor o igual que
  > < menor que
  > <= menor o igual que

  **OPERADORES CONDICIONALES**
  Son aquellos que evalúan dos expresiones booleanas.
  Operador Descripción
  && Operador condicional AND
  || Operador condicional OR
  ?: Operador Ternario
  instanceof Operador instanceof

  **OPERADORES DE BIT**
  Estos nos permiten manejar números binarios. Podemos operarlos de dos formas, una cálculo bit a bit, y otro desplazamiento de bits.
  Operador Descripción
  & Operador bits AND
  ^ Operador bits OR exclusivo (XOR)
  | Operador bits OR inclusivo
  ~ Operador Negación Bits (NOT)
  « Operador desplazamiento izquierda
  » Operador desplazamiento derecha
  »> Operador desplazamiento derecha sin signo
